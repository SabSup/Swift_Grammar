import UIKit

/*:
# Literals, Identifier, Keywords
*/


/*:
## 1. Literals
*/
                                                                                            /*
- 숫자나 문자를 입력을 함으르써 코드내에서 의미가 변하지 않고 그대로 값이 사용되는 것을 리터럴이라고 한다


ex)
                                                                                            */
let x = 7 // 이 코드에서는 리터럴은 7이다

let y = 5 + 7  // 이 코드에서는 리터럴은 5, 7이다. + 는 연산자이다.

let x2 = 7 /* 이 코드에서 리터럴은 7 이다. 주의할 점은 상수 x2에서 2를 리터럴이라고 혼동할 수 있는데
 사실은 그렇지 않다. 여기에서 2는 상수의 '이름' 이며 이름은 리터럴로 인식될 수 없다. 정리하면, 위치에 같
 은 숫자라도 각자 다른 의미로 사용될 수 있다는 것이다.
                                                                                            */




/*:
## 2. Identifiers
*/
                                                                                            /*
- 우리말로는 식별자로 불리며 코드에 포함된 요소를 구별하는데 사용하는 '이름'이다. 식별자는 함수, 상수, 변수,
 자료형의 이름과 같이 코드내에서 사용되는 모든 이름을 의미한다. 주의 할점은 식별자의 이름을 let, var, if,
 switch 같이 지정되어 있는 '예약어'를 사용하는 것은 절대로 불가능하다. 그러나 그럼에도 불구하고 예약어를
 포함 시키고 싶다면 'var numlet = 1' 에서의 let 과 같이 다른문자와 조합하여 사용하도록 한다.

            
ex)                                                                                         */
let z = 7  /* 이 코드에서 식별자(이름) 은 z 이다.  주의 할점은 식별자를 작성할때 숫자로 시작하는 것을 불가
 능하며 만약 숫자를 포함시키고 싶다면 첫번째 문자 다음부터 포함시키면 된다.

                                                                                            */



/*:
## 3. Keywords
*/
                                                                                            /*
- 프로그래밍언어가 제공하는 기능을 위해서 예약된 단어이다. 그래서 예약어라고 부르기도 한다
                                                        

ex)                                                                                         */
let g = 7 /* 위에서 공부 한 것을 토대로 우리는 7은 리터럴, =은 연산자, g는 식별자인 것을 알 수 있다.
 그렇다면 키워드는 무엇일까? --> 답은 let이다. let은 상수를 선언하는 Keyword로써 값을 한번 할당하면
 그 이후에 값을 변경하는 것은 불가능하다
                                                                                            */

var f = 7 /* var는 변수라는 영단어 variable을 줄인 단어로 변수를 선언하는 Keyword 이다. let과
 달리 값을 할당하여도 나중에 값을 변경하고 싶을때, 얼마든지 변경이 가능하다.
                                                                                            */
